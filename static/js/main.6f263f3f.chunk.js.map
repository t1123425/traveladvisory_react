{"version":3,"sources":["component/globalMap.js","component/searchBar.js","actions/index.js","constants/actionType.js","component/listTable.js","component/travelWarningBlock.js","App.js","serviceWorker.js","reducers/dataReducer.js","state.js","reducers/index.js","index.js"],"names":["Map","props","renderAreaColor","geoProperties","tdata","tDataList","returnValue","length","selectedCountry","filter","items","country","indexOf","NAME","red","yellow","orange","gray","sType","name","situation","type","renderLevel","levelInfo","categroy","returnCountryInfo","console","log","state","geoUrl","currentCountryName","className","this","msg1","msg2","data-tip","projectionConfig","scale","rotate","height","stroke","geography","geographies","map","geo","key","rsmKey","onMouseEnter","renderTooltipContent","properties","onMouseLeave","style","default","fill","outline","hover","strokeWidth","pressed","React","PureComponent","defaultProps","connect","travelDataArray","SearchBar","getLevelValue","e","target","value","getAreaValue","renderArea","resetInput","setState","val","renderSearch","showIndex","search","alert","htmlFor","id","placeholder","onChange","handleChange","bind","onClick","icon","warningList","index","defaultValue","areaList","infoData","searchData","ListTable","renderDataByFilter","array","sortDateUpToDown","sort","a","b","Date","date","searchStatus","location","searchValue","currentLevel","area","currentArea","renderWarnType","filterSearch","childData","sortSwtich","prevProps","prevState","listLi","scope","width","colSpan","href","link","TravelWarningBlock","grayCount","yellowCount","OrangeCount","redCount","library","add","faPlane","faTimes","faSortUp","faSortDown","App","toolTipContent","title1","title2","situationType","loadData","axios","get","then","res","load_data","data","catch","err","dataArray","dataAry","Boolean","window","hostname","match","initialState","travelData","dataReducer","action","allReducers","combineReducers","myStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6f263f3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ComposableMap, Geographies, Geography, Graticule} from \"react-simple-maps\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Map extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            geoUrl:'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json',\r\n            currentCountryName: ''\r\n        };\r\n    }\r\n    static defaultProps = {\r\n        msg1: '全球旅遊警示分析地圖',\r\n        msg2:'(Global Travel Advisory Map)'\r\n    }\r\n    componentDidMount(){\r\n        //console.log(' map props', this.props);\r\n    }\r\n    renderAreaColor = geoProperties => {\r\n        let tdata = this.props.tDataList;\r\n        let returnValue = '#d6d8db';\r\n        let colorMap = {\r\n            red:'#fb655a',\r\n            yellow:'#ffeeba',\r\n            orange:'#ff9800',\r\n            gray:'#d6d8db'\r\n        }\r\n        if(tdata.length !== 0){\r\n            let selectedCountry = tdata[0].filter((items) =>{\r\n                // console.log('test',items.country.split(' ')[1]);\r\n                return items.country.indexOf(geoProperties.NAME) > -1;\r\n            })\r\n            if(selectedCountry.length !== 0){\r\n                let situation = this.props.sType.filter((items) => {\r\n                    return items.name === selectedCountry[0].situation\r\n                })\r\n                returnValue = colorMap[situation[0].type];\r\n            }\r\n        }\r\n        \r\n        return returnValue;\r\n    }\r\n    renderLevel = geoProperties => {\r\n        let tdata = this.props.tDataList;\r\n        let levelInfo = '暫無資訊 (No Data)'\r\n        if(tdata.length !== 0){\r\n            let selectedCountry = tdata[0].filter((items) =>{\r\n                // console.log('test',items.country.split(' ')[1]);\r\n                return items.country.indexOf(geoProperties.NAME) > -1;\r\n            })\r\n            if(selectedCountry.length !== 0){\r\n                let situation = this.props.sType.filter((items) => {\r\n                    return items.name === selectedCountry[0].situation\r\n                })\r\n                levelInfo = situation[0].categroy;\r\n            }\r\n\r\n        }\r\n        return levelInfo;\r\n    }\r\n    returnCountryInfo = name => {\r\n        console.log('hello here is '+name);\r\n        //this.setState({currentCountryName:name});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"mapWrap\">\r\n                <h3>{this.props.msg1}</h3>\r\n                <h3>{this.props.msg2}</h3>\r\n                <ComposableMap \r\n                    data-tip=\"\"\r\n                    projectionConfig={{\r\n                        scale:147,\r\n                        rotate: [-10, 0, 0],\r\n                        height:400\r\n                    }}>\r\n                    <Graticule stroke=\"#dee2e6\" />\r\n                    <Geographies geography={this.state.geoUrl}>\r\n                        {({ geographies }) =>\r\n                        geographies.map(geo => \r\n                            <Geography \r\n                            key={geo.rsmKey} \r\n                            geography={geo}\r\n                            onMouseEnter={()=>{\r\n                                this.props.renderTooltipContent(`${geo.properties.NAME} - ${this.renderLevel(geo.properties)}`);\r\n                            }}\r\n                            onMouseLeave={()=>{\r\n                                this.props.renderTooltipContent(\"\");\r\n                            }}\r\n                            style={{\r\n                                default: {\r\n                                  fill: this.renderAreaColor(geo.properties),\r\n                                  stroke:\"#EAEAEC\",\r\n                                  outline: \"none\"\r\n                                },\r\n                                hover: {\r\n                                  fill:this.renderAreaColor(geo.properties),\r\n                                  stroke: \"#d4e809\",\r\n                                  strokeWidth: 2,\r\n                                  outline: \"none\"\r\n                                },\r\n                                pressed: {\r\n                                  fill: \"#E42\",\r\n                                  outline: \"none\"\r\n                                }\r\n                              }}\r\n                            />\r\n                            )\r\n                        }\r\n                    </Geographies>\r\n                </ComposableMap>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst  mapStateToProps =  state => {\r\n    return {\r\n        tDataList:state.travelDataArray\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Map);","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {search} from '../actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nclass SearchBar extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            val:'',\r\n            showIndex:0\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(' search bar props', this.props);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({\r\n          val: e.target.value\r\n        },()=>{\r\n            this.props.renderSearch(this.state.val);\r\n        });\r\n    }\r\n    handleSubmit(){\r\n        if(this.state.val !== ''){\r\n            //this.props.search(this.state.val);\r\n            //this.setState({val:''});\r\n            console.log('props',this.props.search);\r\n        }else{\r\n            alert('搜索資料為空');\r\n        }\r\n    }\r\n    getLevelValue = e => {\r\n        this.props.renderLevel(e.target.value);\r\n    }\r\n    getAreaValue = e => {\r\n        this.props.renderArea(e.target.value);\r\n    }\r\n    resetInput = () => {\r\n        this.setState({\r\n            val:''\r\n        },()=>{\r\n            this.props.renderSearch(this.state.val);\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"searchBarContent row\">\r\n                 <div className=\"col-md-6 text-left\">\r\n                    <label htmlFor=\"search\">搜尋 (Search)</label>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"text\" id=\"search\" className=\"form-control\" placeholder=\"請輸入篩選資料\" onChange={this.handleChange.bind(this)} value={this.state.val}/>\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-danger\" type=\"button\" onClick={this.resetInput.bind(this)}>\r\n                             <FontAwesomeIcon icon=\"times\"></FontAwesomeIcon>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"col-md-3 text-left\">\r\n                    <label htmlFor=\"areaSelect\">狀態篩選 (Level Filter)</label>\r\n                    <div className=\"selectWrap\">\r\n                        <select name=\"\" id=\"areaSelect\" className=\"custom-select\" onChange={this.getLevelValue.bind(this)}>\r\n                            {\r\n                                this.props.warningList.map((items, index) =>(\r\n                                    <option key={index} value={items.categroy} defaultValue={index === this.state.showIndex && items.categroy}>{items.categroy}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"col-md-3 text-left\">\r\n                    <label htmlFor=\"areaSelect\">地區篩選 (Area Filter)</label>\r\n                    <div className=\"selectWrap\">\r\n                        <select name=\"\" id=\"areaSelect\" className=\"custom-select\" onChange={this.getAreaValue.bind(this)}>\r\n                            {\r\n                                this.props.areaList.map((items, index) =>(\r\n                                    <option key={index} value={items} defaultValue={index === this.state.showIndex && items}>{items}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null,{search})(SearchBar);","import {INCREMENT,DECREMENT,ADD,SEARCH,RESET,LOAD_DATA} from '../constants/actionType';\r\nexport const increment = () => {\r\n    return {\r\n        type: INCREMENT\r\n    };\r\n};\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: DECREMENT\r\n    };\r\n};\r\n\r\nexport const search = infoData => {\r\n    return {\r\n        type:SEARCH,\r\n        searchData:infoData\r\n    }\r\n}\r\nexport const reset = () => {\r\n    return {\r\n        type:RESET\r\n    }\r\n}\r\nexport const load_data = dataArray => {\r\n    return {\r\n        type:LOAD_DATA,\r\n        dataAry:dataArray\r\n    }\r\n}\r\n\r\nexport const add = () => {\r\n    return {\r\n        type:ADD\r\n    }\r\n}\r\n\r\n\r\n","export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const ADD = 'ADD';\r\nexport const SEARCH = 'SEARCH';\r\nexport const RESET = 'RESET';\r\nexport const LOAD_DATA = 'LOAD_DATA';","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBar from \"./searchBar\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass ListTable extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            areaList:['亞太地區','亞西地區','歐洲地區','非洲地區','北美地區','拉丁美洲暨加勒比海地區'],\r\n            showIndex:0,\r\n            searchValue:'',\r\n            currentLevel: this.props.sType[0].categroy,\r\n            currentArea: '亞太地區',\r\n            searchStatus:false,\r\n            sortDateUpToDown:true\r\n        }\r\n    }\r\n    renderDataByFilter = array =>{\r\n        let returnAry = [];\r\n        if(this.state.sortDateUpToDown){\r\n            array.sort((a,b) =>{\r\n                return new Date(b.date) - new Date(a.date);\r\n            })      \r\n        }else{\r\n            array.sort((a,b) =>{\r\n                return new Date(a.date) - new Date(b.date);\r\n            })  \r\n        }\r\n        if(this.state.searchStatus){\r\n            returnAry = array.filter((items) => {\r\n                return items.location.indexOf(this.state.searchValue)  > -1; \r\n            });\r\n        }else{\r\n            if(this.state.currentLevel === this.props.sType[0].categroy){\r\n                returnAry = array.filter((items) => {\r\n                    return items.area === this.state.currentArea;   \r\n                });\r\n            }else{\r\n                returnAry = array.filter((items) => {\r\n                    return this.renderWarnType(items.situation)[0].categroy === this.state.currentLevel && items.area === this.state.currentArea;   \r\n                });\r\n            }\r\n        }\r\n        return returnAry;\r\n    }\r\n    renderWarnType = type => {\r\n       let returnType = {};\r\n       returnType = this.props.sType.filter((items) => {\r\n            return items.name === type;\r\n        })\r\n        return returnType;\r\n    }\r\n    filterSearch = () => {\r\n        if(this.state.searchValue.length !== 0){\r\n            this.setState({searchStatus:true});\r\n        }else{\r\n            this.setState({searchStatus:false});\r\n        }\r\n    }\r\n    renderSearch = childData => {\r\n        this.setState({searchValue:childData});\r\n    }\r\n    renderLevel = childData => {\r\n        this.setState({currentLevel:childData});\r\n    }\r\n    renderArea = childData => {\r\n        this.setState({currentArea:childData});\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.searchValue !== this.state.searchValue){\r\n            this.filterSearch();\r\n        }\r\n    }\r\n    sortSwtich = () => {\r\n        if(this.state.sortDateUpToDown){\r\n            this.setState({sortDateUpToDown:false});\r\n        }else{\r\n            this.setState({sortDateUpToDown:true});\r\n        }\r\n    }\r\n    render(){\r\n        let listLi = this.props.tDataList;\r\n        return(\r\n            <div className=\"listBlockWrap\">\r\n                {/* <ul className=\"areaList\">\r\n                  {\r\n                      this.state.areaList.map((items,index) => (\r\n                        <li key={index} onClick={() => {this.selectListIndex(index)}} className={index === this.state.showIndex?'active':''}>\r\n                            <span>{items}</span>\r\n                        </li>\r\n                      ))\r\n                  }\r\n                </ul> */}\r\n                <SearchBar areaList={this.state.areaList} warningList={this.props.sType} renderLevel={this.renderLevel} renderArea={this.renderArea} renderSearch={this.renderSearch}  />\r\n                <div id=\"listTableBlock\" className=\"table-responsive mt-5\">\r\n                  <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" width=\"60%\">\r\n                                地區 <br/>\r\n                                (Area)\r\n                            </th>\r\n                            <th scope=\"col\" width=\"20%\">\r\n                                狀態 <br/>\r\n                                (Level)\r\n                            </th>\r\n                            <th scope=\"col\" width=\"20%\">\r\n                                <div className=\"dateSortBtn\" onClick={this.sortSwtich.bind(this)}>\r\n                                    <span className=\"d-inline-block v-middle\">\r\n                                        更新日期<br/>\r\n                                        (Dated Updated)\r\n                                    </span>\r\n                                    <FontAwesomeIcon icon={this.state.sortDateUpToDown?'sort-down':'sort-up'} className=\"ml-2 v-middle\"></FontAwesomeIcon>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            listLi.length === 0 || this.renderDataByFilter(listLi[0]).length === 0 ?\r\n                            <tr>\r\n                                <td colSpan=\"3\">\r\n                                    <p>暫無數據</p>\r\n                                </td>\r\n                            </tr> :\r\n                           this.renderDataByFilter(listLi[0]).map((items,index) => (\r\n                            <tr key={index}>\r\n                                 <td>\r\n                                    <a href={items.link} target=\"blank\">{items.location}</a>\r\n                                </td>\r\n                                <td className={this.renderWarnType(items.situation)[0].type+'Bg'}>\r\n                                    {this.renderWarnType(items.situation)[0].categroy}\r\n                                </td>\r\n                                <td>\r\n                                    {items.date}\r\n                                </td>\r\n                            </tr>\r\n                           ))\r\n                        }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst  mapStateToProps =  state => {\r\n    return {\r\n        tDataList:state.travelDataArray\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ListTable);","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TravelWarningBlock extends PureComponent{\r\n    state = {\r\n        grayCount:0,\r\n        yellowCount:0,\r\n        OrangeCount:0,\r\n        redCount:0\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"travelWarnBlock\">\r\n                <h4>旅遊分級顏色警示表(Travel Advisory Levels)</h4>\r\n                <ul className=\"dangerRangeList list-group\">\r\n                    <li className=\"list-group-item list-group-item-secondary\">\r\n                        <div className=\"d-inline\">\r\n                            <p>灰色警示-提醒注意</p>\r\n                            <p>Level 1 - Exercise Normal Precautions</p>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-warning\">\r\n                        <div className=\"d-inline\">\r\n                            <p>黃色警示-特別注意旅遊安全並檢討應否前往</p>\r\n                            <p>Level 2 - Exercise Increased Caution</p>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"list-group-item orangeBg\">\r\n                        <div className=\"d-inline\">\r\n                            <p>橙色警示-避免非必要旅行</p>\r\n                            <p>Level 3 - Reconsider Travel</p>\r\n                        </div>\r\n                    \r\n                    </li>\r\n                    <li className=\"list-group-item redBg\">\r\n                        <div className=\"d-inline\">\r\n                            <p>紅色警示-不宜前往，宜儘速離境</p>\r\n                            <p>Level 4 - Do not travel</p>\r\n                        </div>\r\n                    \r\n                    </li>\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst  mapStateToProps =  state => {\r\n    return {\r\n        tDataList:state.travelDataArray\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(TravelWarningBlock)","import React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlane,faTimes,faSortUp,faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport {load_data} from './actions';\nimport Map from './component/globalMap';\nimport ListTable from './component/listTable';\nimport TravelWarningBlock from './component/travelWarningBlock';\nimport ReactTooltip from \"react-tooltip\";\n\nlibrary.add(faPlane,faTimes,faSortUp,faSortDown);\n\nclass App extends React.PureComponent{\n  constructor(props){\n    super(props);\n    this.state = {\n      title1:'全球旅遊警示統計',\n      title2:'Global Travel Advisory',\n      toolTipContent:'',\n      situationType:[\n          {\n            type:'gray',\n            categroy:'顯示全部 (Show All)',\n            name:'顯示全部 (Show All)'\n          },\n          {\n              type:'gray',\n              categroy:'灰色警示 (Level 1)',\n              name:'灰色警示-提醒注意'\n          },\n          {\n              type:'yellow',\n              categroy: '黃色警示 (Level 2)',\n              name: '黃色警示-特別注意旅遊安全並檢討應否前往'\n          },\n          {\n              type: 'orange',\n              categroy: '橙色警示 (Level 3)',\n              name: '橙色警示-避免非必要旅行'\n          },\n          {\n              type: 'red',\n              categroy: '紅色警示 (Level 4)',\n              name: '紅色警示-不宜前往，宜儘速離境'\n          }\n      ]\n    }\n  }\n  renderTooltipContent = childData => {\n    this.setState({toolTipContent:childData})\n  }\n  componentDidMount(){\n    this.loadData();\n  }\n  loadData(){\n    axios.get('https://traveladvisorcrawler.herokuapp.com/crawler').then(res => {\n      //console.log('res',res);\n      if(res){\n        //this.setState({dataArray:res.data});\n        this.props.load_data(res.data);\n      }\n    }).catch(err => {\n      console.log('err',err);\n    })    \n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"d-inline-block v-middle\">\n            <FontAwesomeIcon icon=\"plane\" className=\"fa-2x\" />\n          </div>\n          <div className=\"d-inline-block v-middle ml-2\">\n             <h1>{this.state.title1}</h1>\n             <p>{this.state.title2}</p>\n          </div>\n          <span className=\"ver\">Version 1.0</span>\n        </header>\n        <section id=\"main\" className=\"container\">\n          <div className=\"row justify-content-center align-items-center text-center\">\n            <div className=\"infoBlock col-md-12 mt-5 mb-5 text-left\">\n              <ul className=\"infoBlockList\">\n                <li>\n                  <p>本網頁的原始數據源於外交部領事事務部國外旅遊警示分級表，而此數據主要提供使用者出國旅行之參考資訊，屬參考性質之建議，</p>\n                  <p>另外本網頁主要也是基於優化原版網頁的使用體驗為出發點開發，性質為範例展示，所使用的圖片與數據來源連結也會附在網頁最下方。</p>\n                </li>\n                <li>\n                  <p>The original data on this webpage is derived from the Foreign Tourism Warning Classification Table of the Ministry of Foreign Affairs and Consular Affairs, and this data mainly provides reference information for users to travel abroad.</p>\n                  <p>In addition, this webpage is mainly developed based on optimizing the experience of the original webpage. The nature is shown as an example. The link between the image and the data source used will also be attached to the bottom of the webpage.</p>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-md-12 text-left\">\n              <TravelWarningBlock />\n            </div>\n            <div className=\"col-md-12 mt-5\">\n              <Map sType={this.state.situationType} renderTooltipContent={this.renderTooltipContent}></Map>\n              <ReactTooltip>{this.state.toolTipContent}</ReactTooltip>\n            </div>\n            <div className=\"col-md-12\">\n              <ListTable sType={this.state.situationType} />\n            </div>\n          </div>\n        </section>\n        <footer className=\"text-center\">\n          <p>資料來源於 <a href=\"https://www.boca.gov.tw/sp-trwa-list-1.html\" target=\"blank\">外交部領事事務部</a>，此專案為展示用途。</p>\n          <p>Reference data from <a href=\"https://www.boca.gov.tw/mp-2.html\" target=\"blank\">Bureau of Consular Affairs, Ministry of Foreign Affairs, Republic of China(Taiwan)</a></p>\n          <a target=\"blank\" href=\"https://icons8.com/icons/set/airplane-front-view\">Airplane icon</a> icon by <a target=\"blank\" href=\"https://icons8.com\">Icons8</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default connect(null,{load_data})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import State from '../state.js';\r\nimport {LOAD_DATA,SEARCH,RESET} from '../constants/actionType';\r\nconst initialState = State;\r\nconst dataReducer = (state = initialState.travelData, action) => {\r\n    switch(action.type){\r\n        case LOAD_DATA:\r\n            return [...state, action.dataAry];\r\n        case RESET:\r\n            return [];\r\n        case SEARCH:\r\n            //console.log('state',state);\r\n            let filterArray = [];\r\n            if(action.searchData === ''){\r\n                filterArray = state[0];\r\n            }else{\r\n                filterArray = state[0].filter((items) => {\r\n                    return items.location === action.searchData\r\n                });\r\n            }\r\n            //console.log('filterArray',filterArray);\r\n            return[filterArray];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dataReducer;","const state = {\r\n    travelData:[]\r\n}\r\nexport default state;","import dataReducer from './dataReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    travelDataArray:dataReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/custom.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport allReducers from './reducers';\nimport {Provider} from 'react-redux';\n\n//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()為redux extenion套件需要所用\nconst myStore = createStore(allReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n\nwindow.store = myStore;\n\nmyStore.subscribe(() =>\n console.log('subscribe',myStore.getState())\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={myStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}